{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Learning paths","text":"<p>I recommend that you learn the following technologies in order.  However, if you already have some experience feel free to start at the next logical step!</p> <p>Work through the projects and code. The only way to learn to code is to write it!</p> <pre><code>graph LR\n  A[HTML5] --&gt; B[CSS3];\n  B --&gt; C[Javascript];\n  C --&gt; D[React];\n  D --&gt; E[Nodejs / Express]</code></pre>"},{"location":"#frontend-basics","title":"Frontend: basics","text":"<ul> <li> <p> HTML5</p> <p>Learn how to build websites with HTML5.</p> <p> Getting started with HTML5</p> </li> <li> <p> CSS3</p> <p>Learn how to style your sites with CSS.</p> <p> Getting started with CSS3</p> </li> </ul>"},{"location":"#frontend-intermediate","title":"Frontend: intermediate","text":"<ul> <li> <p> Javascript</p> <p>Learn the core language technology that runs the World Wide Web.</p> <p> Getting started with Javascript</p> </li> <li> <p> React</p> <p>Learn React to build user interfaces from components.</p> <p> Getting started with React</p> </li> </ul>"},{"location":"#backend-intermediate","title":"Backend: intermediate","text":"<ul> <li> <p> NodeJS</p> <p>Learn Node.js\u00ae the open-source, cross-platform JavaScript runtime environment.</p> <p> Getting started with Nodejs</p> </li> <li> <p> Express</p> <p>Learn Express the minimalist web framework for Node.js</p> <p> Getting started with Express</p> </li> </ul>"},{"location":"about/","title":"Build docs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"about/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"about/#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"blog/","title":"Blog Index","text":""},{"location":"blog/2023/04/22/testing-a-first-post/","title":"Testing a first post","text":"<p>This is an example post. It is my first post!</p> <ul> <li> <p>Testing a list</p> <ul> <li>This is another list item</li> <li>another list item</li> </ul> </li> <li> <p> Task 1</p> </li> <li> Task 2<ul> <li> Task 3</li> <li> Task 4</li> </ul> </li> </ul> <p>Hover link: Evolution</p> <p>Using Icons: </p> <p>The HTML specification is maintained by the W3C.</p>","tags":["Tests","Posts"]},{"location":"css/overview/","title":"Overview","text":""},{"location":"expressjs/overview/","title":"Overview","text":""},{"location":"expressjs/setup/","title":"Setup","text":""},{"location":"github/overview/","title":"Overview","text":""},{"location":"html/overview/","title":"Overview","text":""},{"location":"html/HTTP-messages/http-status-messages/","title":"HTTP status messages","text":"<p>When a browser requests a service from a web server, an error might occur, and the server might return an error code like 404 Not Found. These messages are called HTTP status messages. The server always returns a message for every request. The most common message is 200 OK.</p> <p>Below is a list of HTTP status messages that can be returned:</p>"},{"location":"html/HTTP-messages/http-status-messages/#1xx-information","title":"1xx: Information","text":"Message: Description: 100 Continue The server has received the request headers, and the client should proceed to send the request body 101 Switching Protocols The requester has asked the server to switch protocols 103 Early Hints Used with the Link header to allow the browser to start preloading resources while the server prepares a response"},{"location":"html/HTTP-messages/http-status-messages/#2xx-successful","title":"2xx: Successful","text":"Message Description 200 OK The request is OK (this is the standard response for successful HTTP requests) 201 Created The request has been fulfilled, and a new resource is created 202 Accepted The request has been accepted for processing, but the processing has not been completed 203 Non-Authoritative Information The request has been successfully processed, but is returning information that may be from another source 204 No Content The request has been successfully processed, but is not returning any content 205 Reset Content The request has been successfully processed, but is not returning any content, and requires that the requester reset the document view 206 Partial Content The server is delivering only part of the resource due to a range header sent by the client"},{"location":"html/HTTP-messages/http-status-messages/#3xx-redirection","title":"3xx: Redirection","text":"Message Description 300 Multiple Choices A link list. The user can select a link and go to that location. Maximum five addresses 301 Moved Permanently The requested page has moved to a new URL 302 Found The requested page has moved temporarily to a new URL 303 See Other The requested page can be found under a different URL 304 Not Modified Indicates the requested page has not been modified since last requested 307 Temporary Redirect The requested page has moved temporarily to a new URL 308 Permanent Redirect The requested page has moved permanently to a new URL"},{"location":"html/HTTP-messages/http-status-messages/#4xx-client-error","title":"4xx: Client Error","text":"Message Description 400 Bad Request The request cannot be fulfilled due to bad syntax 401 Unauthorized The request was a legal request, but the server is refusing to respond to it. For use when authentication is possible but has failed or not yet been provided 402 Payment Required Reserved for future use 403 Forbidden The request was a legal request, but the server is refusing to respond to it 404 Not Found The requested page could not be found but may be available again in the future 405 Method Not Allowed A request was made of a page using a request method not supported by that page 406 Not Acceptable The server can only generate a response that is not accepted by the client 407 Proxy Authentication Required The client must first authenticate itself with the proxy 408 Request Timeout The server timed out waiting for the request 409 Conflict The request could not be completed because of a conflict in the request 410 Gone The requested page is no longer available 411 Length Required The \"Content-Length\" is not defined. The server will not accept the request without it 412 Precondition Failed The precondition given in the request evaluated to false by the server 413 Request Too Large The server will not accept the request, because the request entity is too large 414 Request-URI Too Long The server will not accept the request, because the URI is too long. Occurs when you convert a POST request to a GET request with a long query information 415 Unsupported Media Type The server will not accept the request, because the media type is not supported 416 Range Not Satisfiable The client has asked for a portion of the file, but the server cannot supply that portion 417 Expectation Failed The server cannot meet the requirements of the Expect request-header field"},{"location":"html/tags/1_tag_comments/","title":"&lt;!-- &gt;","text":"<p>Comments do not show up in the browser. They are used to explain complex parts of your code.</p> HTML<pre><code>&lt;!--This is a comment. Comments are not displayed in the browser--&gt;\n</code></pre> <p>Comments can also be used to \"hide\" scripts from browsers so they are not shown as plain text. Use a double slash on the last comment bracket to prevent javascript from executing the code.</p> HTML<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;!--\nfunction displayMsg() {\nalert(\"Hello World!\")\n}\n//--&gt;\n&lt;/script&gt; \n</code></pre>"},{"location":"html/tags/2_tag_doctype/","title":"&lt;!DOCTYPE&gt;","text":"<p>Each HTML document starts with the <code>&lt;!DOCTYPE&gt;</code> DTD or the Document Type Definition.</p> <p>Doctype is not an HTML tag. It tells the browser which type of document to expect. If it is not declared you can expect inconsistencies across browsers.</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Document Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\nContent\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"html/tags/tag_a/","title":"a","text":"<p>Create a link to Example.com:</p> HTML<pre><code>&lt;a href=\"https://www.example.com\"&gt;Visit example.com!&lt;/a&gt;\n</code></pre>"},{"location":"html/tags/tag_abbr/","title":"abbr","text":""},{"location":"html/tags/tag_acronym/","title":"acronym","text":""},{"location":"html/tags/tag_address/","title":"address","text":""},{"location":"html/tags/tag_area/","title":"area","text":""},{"location":"html/tags/tag_article/","title":"article","text":""},{"location":"html/tags/tag_aside/","title":"aside","text":""},{"location":"html/tags/tag_audio/","title":"audio","text":""},{"location":"html/tags/tag_b/","title":"b","text":""},{"location":"html/tags/tag_base/","title":"base","text":""},{"location":"html/tags/tag_bdi/","title":"bdi","text":""},{"location":"html/tags/tag_bdo/","title":"bdo","text":""},{"location":"html/tags/tag_blockquote/","title":"blockquote","text":""},{"location":"html/tags/tag_body/","title":"body","text":""},{"location":"html/tags/tag_br/","title":"br","text":""},{"location":"html/tags/tag_button/","title":"button","text":""},{"location":"html/tags/tag_canvas/","title":"canvas","text":""},{"location":"javascript/include/","title":"Include javascript","text":""},{"location":"javascript/include/#the-script-tag","title":"The script tag","text":"<p>The <code>&lt;script&gt;</code> tag is used to embed client side(browser) scripts into HTML.</p> HTML<pre><code>&lt;html&gt;\n&lt;script type=\"text/javascript\"&gt;\nalert(\"Hi there!\");\n&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"javascript/include/#log-messages-to-the-browser-console","title":"Log messages to the browser console","text":"<p>You can log messages to the browser console with <code>console.log()</code>.</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;This goes in the tab of your browser&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\nThe content of the webpage\n &lt;script&gt;\nconsole.log(\"Hi there!\");\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"javascript/essentials/variables/","title":"Variables","text":"<p>Variables store information. Variables are one of the most important building blocks in coding.</p> <p>JavaScript<pre><code>firstname = \"Bob\";\nx = 5;\n</code></pre> Can be assigned new values while code is running:</p> JavaScript<pre><code>firstname = \"Jones\";\nx = 10;\n</code></pre>"},{"location":"javascript/essentials/variables/#declaring-variables","title":"Declaring variables","text":"<p>When you create variables you declare them. There are three words for this. </p> <ul> <li>let: Can be changed once declared. let has block scope. Blocks will always be surrounded by curly braces <code>{  }</code>.</li> <li>var: Can be changed when declared. var has global scope and a variable declared with var can be used throughout your entire script.</li> <li>const: Cannot be changed once declared. Once a value is assigned to const it cannot be altered. If you attempt to change a value with const you will throw an error.</li> </ul> <p>const is forever!</p> <p>JavaScript<pre><code>const pi = 3.14159;\npi = 5.2;\n</code></pre> Throws the following error:</p> Text Only<pre><code>Uncaught TypeError: Assignment to constant variable.\n</code></pre> JavaScript<pre><code>// Let can be reassigned { block scope }\nlet firstname = \"Jamie\";\nfirstname = \"John\";\n</code></pre> <p>In more advanced programming variables are typically not hardcoded (assigned a value). Rather they are dynamically filled in from some external input. For example an input box on a website that a user fills out to change their profile. It could also be a form that modifies a database. Hardcoding values is not best practice but is useful during the development process.</p>"},{"location":"javascript/essentials/primitive-data-types/bigint/","title":"BigInt","text":"<p>The number data type has limits. These are between 2<sup>53</sup>-1 and -(2<sup>53</sup>-1). If you need larger numbers used most often for scientific or statistical purposes then you should use BigInt.</p> JavaScript<pre><code>let astronomicalNumber = 821814426472919290n;\n</code></pre> <p>BigInt can only be used with other BigInt numbers. Otherwise it will throw a type error.</p>"},{"location":"javascript/essentials/primitive-data-types/boolean/","title":"Boolean","text":""},{"location":"javascript/essentials/primitive-data-types/escape-characters/","title":"Escape characters","text":"<p>If you want to use single, double and backticks in your strings you need to also add escapes. The <code>\\</code> backslash.</p> <p>In the following example you can see that the double quotes are escaped after the backslashes:</p> JavaScript<pre><code>let nebula1 = \"What is your favorite nebula? Is it \\\"NGC 3196\\\"?\";\nconsole.log(nebula1);\nlet nebula2 = \"What is your favorite star cluster? Is is \\\"M 13\\\"?\";\nconsole.log(nebula2);\n</code></pre> <p>There are other escape characters available. </p> <p>For example you can use <code>\\n</code> to create a new line:</p> JavaScript<pre><code>let newLine = \"New \\nline.\";\nlet backslash = \"This line contains a backslash \\\\.\";\nconsole.log(newLine);\nconsole.log(backslash);\n</code></pre>"},{"location":"javascript/essentials/primitive-data-types/number/","title":"Number","text":"<p>In most languages numbers are represented very specifically. In Javascript they are simply given the data type number. Number represents a 64-bit floating point number. </p> <p>The following numbers can be stored:</p> <ul> <li>Large</li> <li>Signed and unsigned</li> <li>Decimals (float)</li> <li>Exponentials</li> <li>Octals</li> <li>Hexadecimals</li> <li>Binary </li> </ul> JavaScript<pre><code>let int = 5;              // Integer\nlet floatInt = 5.5;       // Decimal float\nlet exponent = 5.5e46;    // Exponential number\nlet octal = 0o10;         // Decimal 8\nlet hexadecimal = 0x3E8;  // Decimal 1000\nlet binary = 0b100;       // Decimal 4\n</code></pre>"},{"location":"javascript/essentials/primitive-data-types/string/","title":"String Type","text":"<p>Strings are used to store text values.  You can declare strings in the following ways:</p> <ul> <li>Double quotes \"This is a string\"</li> <li>Single quotes 'This is also a string'</li> <li>Backticks `This is a special kind of template string`</li> </ul>"},{"location":"javascript/essentials/primitive-data-types/string/#single-and-double-quote-use","title":"Single and double quote use","text":"JavaScript<pre><code>let singleString = 'Welcome to Astronomy 101';\nlet doubleString = \"Do you know what the celestial equator is?\";\n</code></pre> <p>Use double strings to avoid the following error.  This will end the string early:</p> JavaScript<pre><code>let astronomy = 'Don't scratch your mirror!';\n</code></pre> <p>Using double quotes works just fine:</p> JavaScript<pre><code>let astronomy = \"Don't scratch your mirror!\";\n</code></pre> <p>You would encounter the same error with double quotes:</p> JavaScript<pre><code>let learnAstro = \"Will you learn astronomy? \"Yes! I love space\"\";\n</code></pre>"},{"location":"javascript/essentials/primitive-data-types/string/#backtick-use","title":"Backtick use","text":"JavaScript<pre><code>let planet = \"Jupiter\";\nlet msg = ` What do you know about ${planet}`;\nconsole.log(msg);\n</code></pre>"},{"location":"javascript/getting-started/adding-js-to-html/","title":"Add Javascript to HTML","text":""},{"location":"javascript/getting-started/adding-js-to-html/#add-javascript-using-the-script-tag","title":"Add Javascript using the script tag","text":"<p>Add javascript directly to an html file using the script tag:</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;This goes in the tab of your browser&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\nThe content of the webpage\n &lt;script&gt;\nconsole.log(\"Javascript can be added in the script tag.\");\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"javascript/getting-started/adding-js-to-html/#add-javascript-by-linking-a-file","title":"Add Javascript by linking a file","text":"<p>Include javascript by linking to an external file.</p> HTML<pre><code>&lt;html&gt;\n&lt;script type=\"text/javascript\" src=\"navigation.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"javascript/getting-started/setup-dev-environment/","title":"Setup your development environment","text":""},{"location":"javascript/getting-started/setup-dev-environment/#which-ide","title":"Which IDE?","text":"<p>I recommend using Microsoft Visual Code as your IDE (Integrated development environment).</p> <ul> <li>VS Code</li> </ul> <p>Some other options are:</p> <ul> <li>Sublime Text</li> <li>Webstorm</li> </ul>"},{"location":"javascript/getting-started/setup-dev-environment/#required-features","title":"Required Features","text":"<p>The features you need most in your IDE are:</p> <ul> <li>Syntax highlighting</li> <li>Debugging</li> <li>Code completion</li> </ul> <p>MS Code provides many other handy options with extensions. </p>"},{"location":"javascript/getting-started/setup-dev-environment/#best-vs-code-extensions-for-javascript-and-frameworks","title":"Best VS Code extensions for Javascript and frameworks","text":"<ul> <li>JavaScript (ES6) code snippets</li> <li>ESLint</li> <li>DotEnv</li> <li>JavaScript Booster</li> <li>Prettier Code formatter</li> <li>Tailwind CSS IntelliSense</li> <li>Sort Lines</li> <li>GitLens</li> <li>Git Graph</li> <li>GitHub Copilot</li> <li>Live Server</li> <li>Github Copilot</li> <li>Code Spell Checker</li> <li>WSL</li> <li>Typescript React code snippets</li> <li>Remote Explorer</li> <li>Remote Development</li> <li>Remote SSH</li> <li>Nodejs Snippets</li> <li>Es7+ React/Redux snippets</li> <li>Paste Json as code</li> <li>Live Server</li> <li>Quokka.js</li> <li>Rest Client</li> <li>YAML</li> <li>Mocha Sidebar</li> <li>Mocha Test Explorer</li> </ul>"},{"location":"javascript/getting-started/setup-dev-environment/#web-browser","title":"Web Browser","text":"<p>You will need to use a web browser. I would recommend Chrome or Firefox.</p> <ul> <li>Chrome</li> <li>Firefox</li> </ul>"},{"location":"javascript/getting-started/why-learn-js/","title":"Why learn Javascript?","text":""},{"location":"javascript/getting-started/why-learn-js/#community","title":"Community","text":"<p>Javascript encompasses a gigantic community of developers. This makes it easier to find what you need or to get involved with other projects.</p>"},{"location":"javascript/getting-started/why-learn-js/#the-frontend-and-backend-speak-the-same-language","title":"The Frontend and backend speak the same language!","text":"<p>This perhaps the greatest benefit to learning Javascript. You can use the same language for both the front and backend of your application stack.</p>"},{"location":"nodejs/es6/","title":"ECMAScript 2015 (ES6)","text":"<p>Node.js is built against modern versions of V8.</p> <p>For more information, see:  V8 JavaScript Engine</p>"},{"location":"nodejs/es6/#which-version-of-nodejs-ships-with-v8","title":"Which version of Node.js ships with V8?","text":"<p>Run the following command from the terminal to check which version of node is shipped with the V8 engine:</p> Bash<pre><code>node -p process.versions.v8\n</code></pre>"},{"location":"nodejs/overview/","title":"Overview","text":""},{"location":"nodejs/overview/#what-is-nodejs","title":"What is Node.js?","text":"<ul> <li>Node.js is open-source </li> <li>It is Cross-platform (Windows, Linux, Unix, Mac OS X, etc.)</li> <li>It is a JavaScript runtime environment</li> </ul>"},{"location":"nodejs/overview/#why-use-nodejs","title":"Why use Node.js?","text":"<p>A common task for a web server can be to open a file on the server and return the content to the client.</p> <p>Here is how PHP or ASP handles a file request:</p> <ol> <li>Sends the task to the computer's file system.</li> <li>Waits while the file system opens and reads the file.</li> <li>Returns the content to the client.</li> <li>Ready to handle the next request.</li> </ol> <p>Here is how Node.js handles a file request:</p> <ol> <li>Sends the task to the computer's file system.</li> <li>Ready to handle the next request.</li> <li>When the file system has opened and read the file, the server returns the content to the client.</li> </ol> <p>Node.js removes the wait period, and continues with the next request.</p> <p>Node.js runs single-threaded, it is non-blocking, asynchronous programming, which is very memory efficient.</p>"},{"location":"nodejs/overview/#what-can-nodejs-do","title":"What can Node.js do?","text":"<ul> <li>Node.js can generate dynamic page content</li> <li>Node.js can create, open, read, write, delete, and close files on the server</li> <li>Node.js can collect form data</li> <li>Node.js can add, delete, modify data in your database</li> </ul>"},{"location":"nodejs/overview/#what-are-nodejs-files","title":"What are Node.js files?","text":"<ul> <li>Node.js files contain tasks that will be executed on certain events</li> <li>A typical event is someone trying to access a port on the server</li> <li>Node.js files must be initiated on the server before having any effect</li> <li>Node.js files have extension \".js\"</li> </ul>"},{"location":"nodejs/setup/","title":"Setup","text":"<p>Get node:</p> <p>Node.js latest</p>"},{"location":"react/overview/","title":"Overview","text":""},{"location":"react/setup/","title":"Setup","text":""},{"location":"typescript/overview/","title":"Overview","text":""},{"location":"typescript/setup/","title":"Setup","text":""}]}